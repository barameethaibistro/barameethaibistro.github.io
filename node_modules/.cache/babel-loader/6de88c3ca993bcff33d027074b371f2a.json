{"ast":null,"code":"var _jsxFileName = \"/Users/keen/Coding/react-baramee-thai-bistro/src/page/responsiveHome.js\";\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport throttle from 'lodash.throttle';\nimport DesktopHome from './desktopHome';\nimport TabletHome from './tabletHome';\nimport MobileIndex from './mobileIndex';\nimport desktopIndex from './desktopIndex';\n\nclass ResponsiveHome extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      viewportWidth: 0\n    };\n    this.saveViewportDimensions = throttle(() => {\n      this.setState({\n        viewportWidth: window.innerWidth\n      });\n    }, this.props.applyViewportChange);\n  }\n\n  componentDidMount() {\n    this.saveViewportDimensions();\n    window.addEventListener('resize', this.saveViewportDimensions);\n  }\n\n  componentWillUnmount() {\n    window.removeEventListener('resize', this.saveViewportDimensions);\n  }\n\n  render() {\n    if (this.state.viewportWidth > this.props.tabletBreakPoint) {\n      return React.createElement(\"desktopIndex\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 31\n        },\n        __self: this\n      });\n    } // if (\n    //   this.state.viewportWidth > this.props.mobileBreakPoint &&\n    //   this.state.viewportWidth <= this.props.tabletBreakPoint\n    // ) {\n    //   return <TabletHome />\n    // }\n\n\n    return React.createElement(MobileIndex, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41\n      },\n      __self: this\n    });\n  }\n\n}\n\nResponsiveHome.propTypes = {\n  mobileBreakPoint: PropTypes.number,\n  tabletBreakPoint: PropTypes.number,\n  applyViewportChange: PropTypes.number\n};\nResponsiveHome.defaultProps = {\n  mobileBreakPoint: 576,\n  tabletBreakPoint: 1024,\n  applyViewportChange: 250\n};\nexport default ResponsiveHome;","map":{"version":3,"sources":["/Users/keen/Coding/react-baramee-thai-bistro/src/page/responsiveHome.js"],"names":["React","Component","PropTypes","throttle","DesktopHome","TabletHome","MobileIndex","desktopIndex","ResponsiveHome","state","viewportWidth","saveViewportDimensions","setState","window","innerWidth","props","applyViewportChange","componentDidMount","addEventListener","componentWillUnmount","removeEventListener","render","tabletBreakPoint","propTypes","mobileBreakPoint","number","defaultProps"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,QAAP,MAAqB,iBAArB;AACA,OAAOC,WAAP,MAAwB,eAAxB;AACA,OAAOC,UAAP,MAAuB,cAAvB;AACA,OAAOC,WAAP,MAAwB,eAAxB;AACA,OAAOC,YAAP,MAAyB,gBAAzB;;AAEA,MAAMC,cAAN,SAA6BP,SAA7B,CAAuC;AAAA;AAAA;AAAA,SACrCQ,KADqC,GAC7B;AACNC,MAAAA,aAAa,EAAE;AADT,KAD6B;AAAA,SAcrCC,sBAdqC,GAcZR,QAAQ,CAAC,MAAM;AACtC,WAAKS,QAAL,CAAc;AACZF,QAAAA,aAAa,EAAEG,MAAM,CAACC;AADV,OAAd;AAGD,KAJgC,EAI9B,KAAKC,KAAL,CAAWC,mBAJmB,CAdI;AAAA;;AAKrCC,EAAAA,iBAAiB,GAAG;AAClB,SAAKN,sBAAL;AACAE,IAAAA,MAAM,CAACK,gBAAP,CAAwB,QAAxB,EAAkC,KAAKP,sBAAvC;AACD;;AAEDQ,EAAAA,oBAAoB,GAAG;AACrBN,IAAAA,MAAM,CAACO,mBAAP,CAA2B,QAA3B,EAAqC,KAAKT,sBAA1C;AACD;;AAQDU,EAAAA,MAAM,GAAG;AACP,QAAI,KAAKZ,KAAL,CAAWC,aAAX,GAA2B,KAAKK,KAAL,CAAWO,gBAA1C,EAA4D;AAC1D,aAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAP;AACD,KAHM,CAKP;AACA;AACA;AACA;AACA;AACA;;;AAEA,WAAO,oBAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAP;AACD;;AAjCoC;;AAoCvCd,cAAc,CAACe,SAAf,GAA2B;AACzBC,EAAAA,gBAAgB,EAAEtB,SAAS,CAACuB,MADH;AAEzBH,EAAAA,gBAAgB,EAAEpB,SAAS,CAACuB,MAFH;AAGzBT,EAAAA,mBAAmB,EAAEd,SAAS,CAACuB;AAHN,CAA3B;AAMAjB,cAAc,CAACkB,YAAf,GAA8B;AAC5BF,EAAAA,gBAAgB,EAAE,GADU;AAE5BF,EAAAA,gBAAgB,EAAE,IAFU;AAG5BN,EAAAA,mBAAmB,EAAE;AAHO,CAA9B;AAKA,eAAeR,cAAf","sourcesContent":["import React, { Component } from 'react'\nimport PropTypes from 'prop-types'\nimport throttle from 'lodash.throttle'\nimport DesktopHome from './desktopHome'\nimport TabletHome from './tabletHome'\nimport MobileIndex from './mobileIndex'\nimport desktopIndex from './desktopIndex'\n\nclass ResponsiveHome extends Component {\n  state = {\n    viewportWidth: 0\n  }\n\n  componentDidMount() {\n    this.saveViewportDimensions()\n    window.addEventListener('resize', this.saveViewportDimensions)\n  }\n\n  componentWillUnmount() {\n    window.removeEventListener('resize', this.saveViewportDimensions)\n  }\n\n  saveViewportDimensions = throttle(() => {\n    this.setState({\n      viewportWidth: window.innerWidth\n    })\n  }, this.props.applyViewportChange)\n\n  render() {\n    if (this.state.viewportWidth > this.props.tabletBreakPoint) {\n      return <desktopIndex />\n    }\n\n    // if (\n    //   this.state.viewportWidth > this.props.mobileBreakPoint &&\n    //   this.state.viewportWidth <= this.props.tabletBreakPoint\n    // ) {\n    //   return <TabletHome />\n    // }\n\n    return <MobileIndex />\n  }\n}\n\nResponsiveHome.propTypes = {\n  mobileBreakPoint: PropTypes.number,\n  tabletBreakPoint: PropTypes.number,\n  applyViewportChange: PropTypes.number\n}\n\nResponsiveHome.defaultProps = {\n  mobileBreakPoint: 576,\n  tabletBreakPoint: 1024,\n  applyViewportChange: 250\n}\nexport default ResponsiveHome\n"]},"metadata":{},"sourceType":"module"}